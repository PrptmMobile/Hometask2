package oop1;

/**
 *  ласс служит дл€ хранени€ атомных подводных лодок
 * @author prptm.mobile
 * @version 1.0
 */
public class јтомна€Ћодка {
    /**
     * —войство: страна-производитель.
     */
    public String страна;
    /**
     * —войство: двигатель подводной лодки.
     *
     * @see ƒвигательƒл€јтомнойЋодки
     */
    private ƒвигательƒл€јтомнойЋодки двигатель;

    /**
     * ¬нутренний класс дл€ хранени€ двигател€ атомной подводной лодки.
     */
    class ƒвигательƒл€јтомнойЋодки{
        /**
         * —войство: количество реакторов.
         */
        private int колво–еакторов;
        /**
         * —войство: режим работы двигател€.
         */
        private boolean двигатель«апущен = false;

        /**
         * —оздает новый атомный двигатель.
         * @param колво–еакторов - количество реакторов в атомном двигателе.
         */
        public ƒвигательƒл€јтомнойЋодки(int колво–еакторов) {
            this.колво–еакторов = колво–еакторов;
        }

        /**
         * ћетод запускает двигатель.
         */
        protected void запускƒвигател€(){
            двигатель«апущен = true;
            System.out.println("ƒвигатель запущен");
        }

        /**
         * ћетод останавливает двигатель.
         */
        protected void остановкаƒвигател€(){
            двигатель«апущен = false;
            System.out.println("ƒвигатель остановлен");
        }
    }

    /**
     * —оздает новую подлодку.
     * @param страна - —трана - производитель.
     * @param колво - количество реакторов в атомном двигателе.
     */
    public јтомна€Ћодка(String страна, int колво) {
        this.страна = страна;
        this.двигатель = new ƒвигательƒл€јтомнойЋодки(колво);
    }

    /**
     * ћетод отправл€ет лодку на задание.
     */
    public void отправитьЋодку(){
        двигатель.запускƒвигател€();
        System.out.println("Ћодка отправлена на задание");
    }

    /**
     * ћетод возвращает лодку с задани€.
     */
    public void остановитьЋодку(){
        двигатель.остановкаƒвигател€();
        System.out.println("Ћодка вернулась с задани€");
    }
}

/**
 * ѕервые испытани€ нового класса атомных подводных лодок.
 */
class —пускЌа¬оду{
    public static void main(String[] args) throws InterruptedException {
        јтомна€Ћодка  27 = new јтомна€Ћодка("———–",2);
         27.отправитьЋодку();
        Thread thread = new Thread();
        thread.sleep(4000);
         27.остановитьЋодку();
    }
}
